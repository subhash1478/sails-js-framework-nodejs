/*** Generated by streamline 0.10.17 (callbacks) - DO NOT EDIT ***/ "use strict"; var __rt=require('streamline/lib/callbacks/runtime').runtime(__filename, false),__func=__rt.__func,__cb=__rt.__cb; var profile = require("../../../util/profile");
































var utils = require("../../../util/utils");

var $ = utils.getLocaleString;

exports.init = function(cli) {






  var resourceSkusList = cli.category("vm-resourcesku").description($("Commands to manage your resource skus.  "));

  resourceSkusList.command("list").description($("Gets the list of Microsoft.Compute SKUs available for your Subscription.")).usage("[options]").option("-s, --subscription <subscription>", $("The subscription identifier")).execute(function __1(options, _) { var subscription, computeManagementClient, result, nextPageLink, pageResult; var __frame = { name: "__1", line: 51 }; return __func(_, this, arguments, __1, 1, __frame, function __$__1() {




      subscription = profile.current.getSubscription(options.subscription);
      computeManagementClient = utils.createComputeManagementClient(subscription);
      return computeManagementClient.resourceSkus.list(__cb(_, __frame, 3, 54, function ___(__0, __1) { result = __1;
        nextPageLink = result.nextLink; return (function ___(__break) { var __more; var __loop = __cb(_, __frame, 0, 0, function __$__1() { __more = false;
            var __4 = nextPageLink; if (__4) {
              return computeManagementClient.resourceSkus.listNext(nextPageLink, __cb(_, __frame, 6, 60, function ___(__0, __2) { pageResult = __2;
                pageResult.forEach(function(item) {
                  result.push(item); });

                nextPageLink = pageResult.nextLink; while (__more) { __loop(); }; __more = true; }, true)); } else { __break(); } ; }); do { __loop(); } while (__more); __more = true; })(function __$__1() {


          if (result) {
            cli.output.json(result); } ; _(); }); }, true)); }); });};
