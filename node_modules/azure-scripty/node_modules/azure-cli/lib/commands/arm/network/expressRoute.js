/*** Generated by streamline 0.10.17 (callbacks) - DO NOT EDIT ***/ var __rt=require('streamline/lib/callbacks/runtime').runtime(__filename, false),__func=__rt.__func,__cb=__rt.__cb,__catch=__rt.__catch,__tryCatch=__rt.__tryCatch; var __ = require("underscore");















var util = require("util");
var utils = require("../../../util/utils");
var $ = utils.getLocaleString;

function ExpressRoute(cli, networkManagementClient) {
  this.networkManagementClient = networkManagementClient;
  this.output = cli.output;
  this.interaction = cli.interaction;};


__.extend(ExpressRoute.prototype, {




  getCircuit: function getCircuit__1(resourceGroupName, circuitName, _) { var self, progress, circuit, __this = this; var __frame = { name: "getCircuit__1", line: 32 }; return __func(_, this, arguments, getCircuit__1, 2, __frame, function __$getCircuit__1() { self = __this;

      progress = self.interaction.progress(util.format($("Looking up the express route circuit \"%s\""), circuitName)); return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$getCircuit__1() { return (function ___(__then) { (function ___(_) { __tryCatch(_, function __$getCircuit__1() {

                  return self.networkManagementClient.expressRouteCircuits.get(resourceGroupName, circuitName, null, __cb(_, __frame, 4, 70, function ___(__0, __1) { circuit = __1;
                    return _(null, circuit); }, true)); }); })(function ___(e, __result) { __catch(function __$getCircuit__1() { if (e) {

                    if ((e.statusCode === 404)) {
                      return _(null, null); } ;

                    return _(e); } else { _(null, __result); } ; }, _); }); })(function ___() { __tryCatch(_, function __$getCircuit__1() { _(null, null, true); }); }); }); })(function ___(__e, __r, __cont) { (function ___(__then) { __tryCatch(_, function __$getCircuit__1() {

              progress.end(); __then(); }); })(function ___() { __tryCatch(_, function ___() { if (__cont) { __then(); } else { _(__e, __r); }; }); }); }); })(function ___() { __tryCatch(_, function __$getCircuit__1() { _(); }); }); }); }});





module.exports = ExpressRoute;
