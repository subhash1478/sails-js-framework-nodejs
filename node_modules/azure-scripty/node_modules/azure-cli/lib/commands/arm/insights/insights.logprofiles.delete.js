/*** Generated by streamline 0.10.17 (callbacks) - DO NOT EDIT ***/ "use strict"; var __rt=require('streamline/lib/callbacks/runtime').runtime(__filename, false),__func=__rt.__func,__cb=__rt.__cb; var utils = require("../../../util/utils");

















var insightsUtils = require("./insights.utils");
var $ = utils.getLocaleString;

exports.init = function(cli) {
  var log = cli.output;
  var insightsDiagnosticCommand = cli.category("insights").category("logprofile").description($("Configure log profiles")).command("delete").description($("Delete the log profile.")).usage("[options]").option("-n, --name <name>", $("name of the log profile.")).execute(function __1(options, _) { var __frame = { name: "__1", line: 30 }; return __func(_, this, arguments, __1, 1, __frame, function __$__1() {






      return insightsDiagnosticCommand._prepareAndExecute(options, __cb(_, __frame, 1, 34, function __$__1() { _(); }, true)); }); });


  insightsDiagnosticCommand._prepareAndExecute = function insightsDiagnosticCommand__prepareAndExecute__2(options, _) { var client, __this = this; var __frame = { name: "insightsDiagnosticCommand__prepareAndExecute__2", line: 34 }; return __func(_, this, arguments, insightsDiagnosticCommand__prepareAndExecute__2, 1, __frame, function __$insightsDiagnosticCommand__prepareAndExecute__2() {
      client = insightsUtils.createInsightsManagementClient(log, options);
      return __this._executeCmd(client, cli, log, options, __cb(_, __frame, 2, 9, function __$insightsDiagnosticCommand__prepareAndExecute__2() { _(); }, true)); }); };


  insightsDiagnosticCommand._executeCmd = function insightsDiagnosticCommand__executeCmd__3(client, cli, log, options, _) { var __frame = { name: "insightsDiagnosticCommand__executeCmd__3", line: 39 }; return __func(_, this, arguments, insightsDiagnosticCommand__executeCmd__3, 4, __frame, function __$insightsDiagnosticCommand__executeCmd__3() {
      return client.logProfilesOperations.deleteMethod(options.name, __cb(_, __frame, 1, 33, function __$insightsDiagnosticCommand__executeCmd__3() {
        insightsUtils.formatOutput(cli, log, options, (("Log profile '" + options.name) + "' is deleted")); _(); }, true)); }); };};
